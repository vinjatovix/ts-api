openapi: 3.0.3

info:
  title: ts-api
  description: |-
    This is a POC of an API/REST made with Typescript following DDD principles.

    Some usefull links:
    - [The Github Repository readme](https://github.com/vinjatovix/ts-api#readme)
    - [Contributing](https://github.com/vinjatovix/ts-api/blob/develop/CONTRIBUTING.md)
  contact:
    email: vinjadevix@gmail.com
  license:
    name: MIT License
    url: https://github.com/vinjatovix/ts-api/blob/develop/LICENSE.md
  version: '1.4.0'

servers:
  - url: HOST
    variables: {}

tags:
  - name: Books
  - name: Health

paths:
  /api/v1/Books:
    get:
      tags:
        - Books
      summary: Get All Books
      operationId: GetAllBooks
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      deprecated: false
      tags:
        - Books
      summary: Create Book
      operationId: CreateBook
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            example:
              id: '{{$guid}}'
              title: '{{$randomWords}}'
              author: '{{$randomNamePrefix}} {{$randomLastName}}'
              isbn: '978-3-16-148410-0'
              releaseDate: '{{$isoTimestamp}}'
              pages: 1500
        required: true
      responses:
        '201':
          description: Created
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content: {}
        '400':
          description: Bad Request
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
            content-length:
              $ref: '#/components/headers/content-length'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              example:
                errors:
                  - id: 'Invalid value at params. Value: USB'
                  - author: 'Invalid value at body. Value: undefined'
                  - isbn: 'Invalid value at body. Value: 522'
                  - releaseDate: 'Invalid value at body. Value: leading-edge'
                  - pages: 'Invalid value at body. Value: Baht'

  /api/v1/Books/{id}:
    get:
      deprecated: false
      tags:
        - Books
      summary: Get Book by Id
      operationId: GetBookById
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{bookId}}'
      responses:
        '200':
          description: Successful operation
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    patch:
      deprecated: false
      tags:
        - Books
      summary: Update Book by Id
      operationId: UpdateBook
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{$guid}}'
      requestBody:
        description: ''
        content:
          application/json:
            example:
              pages: 1500
        required: true
      responses:
        '200':
          description: Updated
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
          content: {}
        '400':
          description: Bad Request
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              example:
                errors:
                  - message: 'Empty body is not allowed'
    delete:
      deprecated: false
      tags:
        - Books
      summary: Delete Book by Id
      operationId: DeleteBookById
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{bookId}}'
      responses:
        '204':
          description: Deleted
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content: {}

  /api/v1/health/http:
    get:
      deprecated: false
      tags:
        - Health
      summary: Api server
      operationId: Apiserver
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'

components:
  headers:
    connection:
      description: The connection header
      schema:
        type: string
        example: keep-alive
    keep-alive:
      description: The keep-alive header
      schema:
        type: string
        example: timeout=5
    vary:
      description: The vary header
      schema:
        type: string
        example: Origin
    access-control-allow-credentials:
      description: The access-control-allow-credentials header
      schema:
        type: string
        example: 'true'
    x-xss-protection:
      description: The x-xss-protection header
      schema:
        type: string
        example: '0'
    x-content-type-options:
      description: The x-content-type-options header
      schema:
        type: string
        example: nosniff
    x-frame-options:
      description: The x-frame-options header
      schema:
        type: string
        example: DENY
    date:
      description: The Date header
      schema:
        type: string
        example: Sun, 15 Oct 2023 19:19:00 GMT
    content-length:
      description: The content-length header
      schema:
        type: string
        example: '0'
    x-envoy-upstream-service-time:
      description: The X-Envoy-Upstream-Service-Time header
      schema:
        type: string
    server:
      description: The Server header
      schema:
        type: string
    etag:
      description: The ETag header
      schema:
        type: string

  schemas:
    400:
      title: '400'
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              author:
                type: string
              isbn:
                type: string
              releaseDate:
                type: string
              pages:
                type: string
      example:
        errors:
          - author: 'Invalid value at body. Value: undefined'
          - isbn: 'Invalid value at body. Value: 522'
          - releaseDate: 'Invalid value at body. Value: leading-edge'
          - pages: 'Invalid value at body. Value: Baht'

    Health:
      title: OK
      type: object
      properties:
        version:
          type: string
        status:
          type: string
      example:
        version: 1.4.0
        status: OK
    Book:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        releaseDate:
          type: string
        pages:
          type: number
      example:
        id: 'b1d9b21-f695-4abd-910b-78c42204f1f9'
        title: 'Book title'
        author: 'Mr. Cont'
        isbn: '978-3-16-148410-0'
        releaseDate: '2023-10-15T22:00:21.845Z'
        pages: 576
