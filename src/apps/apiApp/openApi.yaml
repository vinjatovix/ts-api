openapi: 3.0.3

info:
  title: ts-api
  description: |-
    This is a POC of an API/REST made with Typescript following DDD principles.

    Some usefull links:
    - [The Github Repository readme](https://github.com/vinjatovix/ts-api#readme)
    - [Contributing](https://github.com/vinjatovix/ts-api/blob/develop/CONTRIBUTING.md)
  contact:
    email: vinjadevix@gmail.com
  license:
    name: MIT License
    url: https://github.com/vinjatovix/ts-api/blob/develop/LICENSE.md
  version: '2.0.0'

servers:
  - url: HOST
    variables: {}

tags:
  - name: Auth
  - name: Authors
  - name: Books
  - name: Health

paths:
  /api/v1/Auth/register:
    post:
      deprecated: false
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            example:
              username: '{{$randomNamePrefix}} {{$randomLastName}}'
              email: '{{$randomEmail}}'
              password: '{{$randomPassword}}'
              repeatPassword: '{{$randomPassword}}'
        required: true
      responses:
        '201':
          description: Created
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content: {}

  /api/v1/Auth/login:
    post:
      deprecated: false
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            example:
              email: '{{$randomEmail}}'
              password: '{{$randomPassword}}'
        required: true
      responses:
        '200':
          description: Successful operation
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjIzOTlmOWI0LTc1NWItNDBiZS04NTAwLTNkOTgxYzc2MmQ0NiIsImVtYWlsIjoidXNlcjE3MDI0MjI2ODgyMTFAdGVzdC5jb20iLCJ1c2VybmFtZSI6InVzZXIxNzAyNDIyNjg4MjExIiwicm9sZXMiOlsidXNlciJdLCJpYXQiOjE3MDI0MjMzMzksImV4cCI6MTcwMjQzMDUzOX0.zS6toKlHdEvuL4k5CBFlyNCCWjkAZbwC1x2AYQqNUhA"

  /api/v1/Auth/validate/{token}:
    get:
      deprecated: false
      tags:
        - Auth
      summary: Validate Token
      operationId: ValidateToken
      parameters:
        - name: token
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{$jwtToken}}'
      responses:
        '200':
          description: Successful operation
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjIzOTlmOWI0LTc1NWItNDBiZS04NTAwLTNkOTgxYzc2MmQ0NiIsImVtYWlsIjoidXNlcjE3MDI0MjI2ODgyMTFAdGVzdC5jb20iLCJ1c2VybmFtZSI6InVzZXIxNzAyNDIyNjg4MjExIiwicm9sZXMiOlsidXNlciJdLCJpYXQiOjE3MDI0MjMzMzksImV4cCI6MTcwMjQzMDUzOX0.zS6toKl"
        '401':
          description: Unauthorized
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
              example:
                message: 'Invalid token'

  /api/v1/Authors:
    get:
      tags:
        - Authors
      summary: Get all  authors
      operationId: GetAllAuthors
      security:
        - bearerAuth: []
      parameters:
        - name: include
          description: Include relateds
          in: query
          required: false
          schema:
            type: string
        - name: fields
          description: Return only specific fields
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    post:
      deprecated: false
      tags:
        - Authors
      summary: Create Author
      operationId: CreateAuthor
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            example:
              id: '{{$guid}}'
              name: '{{$randomWords}}'
        required: true

      responses:
        '201':
          description: Created
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content: {}

        '400':
          description: Bad Request
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
            content-length:
              $ref: '#/components/headers/content-length'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              example:
                errors:
                  - id: 'Invalid value at params. Value: USB'
                  - name: 'Invalid value at body. Value: undefined'

  /api/v1/Authors/{id}:
    get:
      tags:
        - Authors
      summary: Get Author by id
      operationId: GetAuthorById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{authorId}}'
        - name: include
          description: Include relateds
          in: query
          required: false
          schema:
            type: string
        - name: fields
          description: Return only specific fields
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful operation
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    patch:
      deprecated: false
      tags:
        - Authors
      summary: Update Author by Id
      operationId: UpdateAuthor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{$guid}}'
      requestBody:
        description: ''
        content:
          application/json:
            example:
              name: "Sempere"
        required: true
      responses:
        '200':
          description: Updated
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
          content: {}
        '400':
          description: Bad Request
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              example:
                errors:
                  - message: 'Empty body is not allowed'
    delete:
      deprecated: false
      tags:
        - Authors
      summary: Delete Author by Id
      operationId: DeleteAuthorById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{authorId}}'
      responses:
        '204':
          description: Deleted
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content: {}

  /api/v1/Books:
    get:
      tags:
        - Books
      summary: Get All Books
      operationId: GetAllBooks
      security:
        - bearerAuth: []
      parameters:
        - name: include
          description: Include relateds
          in: query
          required: false
          schema:
            type: string
        - name: fields
          description: Return only specific fields
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      deprecated: false
      tags:
        - Books
      summary: Create Book
      operationId: CreateBook
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            example:
              id: '{{$guid}}'
              title: '{{$randomWords}}'
              author: '{{$randomNamePrefix}} {{$randomLastName}}'
              isbn: '978-3-16-148410-0'
              releaseDate: '{{$isoTimestamp}}'
              pages: 1500
        required: true
      responses:
        '201':
          description: Created
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content: {}
        '400':
          description: Bad Request
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
            content-length:
              $ref: '#/components/headers/content-length'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              example:
                errors:
                  - id: 'Invalid value at params. Value: USB'
                  - author: 'Invalid value at body. Value: undefined'
                  - isbn: 'Invalid value at body. Value: 522'
                  - releaseDate: 'Invalid value at body. Value: leading-edge'
                  - pages: 'Invalid value at body. Value: Baht'

  /api/v1/Books/{id}:
    get:
      deprecated: false
      tags:
        - Books
      summary: Get Book by Id
      operationId: GetBookById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{bookId}}'
        - name: include
          description: Include relateds
          in: query
          required: false
          schema:
            type: string
        - name: fields
          description: Return only specific fields
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful operation
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            x-envoy-upstream-service-time:
              $ref: '#/components/headers/x-envoy-upstream-service-time'
            server:
              $ref: '#/components/headers/server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    patch:
      deprecated: false
      tags:
        - Books
      summary: Update Book by Id
      operationId: UpdateBook
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{$guid}}'
      requestBody:
        description: ''
        content:
          application/json:
            example:
              pages: 1500
        required: true
      responses:
        '200':
          description: Updated
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
          content: {}
        '400':
          description: Bad Request
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
              example:
                errors:
                  - message: 'Empty body is not allowed'
    delete:
      deprecated: false
      tags:
        - Books
      summary: Delete Book by Id
      operationId: DeleteBookById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: required
          required: true
          style: simple
          schema:
            type: string
            example: '{{bookId}}'
      responses:
        '204':
          description: Deleted
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content: {}

  /api/v1/health/http:
    get:
      deprecated: false
      tags:
        - Health
      summary: Api server
      operationId: Apiserver
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            vary:
              $ref: '#/components/headers/vary'
            access-control-allow-credentials:
              $ref: '#/components/headers/access-control-allow-credentials'
            x-xss-protection:
              $ref: '#/components/headers/x-xss-protection'
            x-content-type-options:
              $ref: '#/components/headers/x-content-type-options'
            x-frame-options:
              $ref: '#/components/headers/x-frame-options'
            content-length:
              $ref: '#/components/headers/content-length'
            etag:
              $ref: '#/components/headers/etag'
            date:
              $ref: '#/components/headers/date'
            connection:
              $ref: '#/components/headers/connection'
            keep-alive:
              $ref: '#/components/headers/keep-alive'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'

components:
  headers:
    connection:
      description: The connection header
      schema:
        type: string
        example: keep-alive
    keep-alive:
      description: The keep-alive header
      schema:
        type: string
        example: timeout=5
    vary:
      description: The vary header
      schema:
        type: string
        example: Origin
    access-control-allow-credentials:
      description: The access-control-allow-credentials header
      schema:
        type: string
        example: 'true'
    x-xss-protection:
      description: The x-xss-protection header
      schema:
        type: string
        example: '0'
    x-content-type-options:
      description: The x-content-type-options header
      schema:
        type: string
        example: nosniff
    x-frame-options:
      description: The x-frame-options header
      schema:
        type: string
        example: DENY
    date:
      description: The Date header
      schema:
        type: string
        example: Sun, 15 Oct 2023 19:19:00 GMT
    content-length:
      description: The content-length header
      schema:
        type: string
        example: '0'
    x-envoy-upstream-service-time:
      description: The X-Envoy-Upstream-Service-Time header
      schema:
        type: string
    server:
      description: The Server header
      schema:
        type: string
    etag:
      description: The ETag header
      schema:
        type: string

  schemas:
    400:
      title: 'Bad Request'
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              author:
                type: string
              isbn:
                type: string
              releaseDate:
                type: string
              pages:
                type: string
      example:
        errors:
          - author: 'Invalid value at body. Value: undefined'
          - isbn: 'Invalid value at body. Value: 522'
          - releaseDate: 'Invalid value at body. Value: leading-edge'
          - pages: 'Invalid value at body. Value: Baht'

    401:
      title: 'Unauthorized'
      type: object
      properties:
        message:
          type: string
      example:
        message: 'Invalid token'

    Health:
      title: "Health"
      type: object
      properties:
        version:
          type: string
        status:
          type: string
      example:
        version: 2.0.0
        status: OK

    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'


    Book:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        releaseDate:
          type: string
        pages:
          type: number
        metadata:
          $ref: '#/components/schemas/Metadata'
      example:
        id: 'b1d9b21-f695-4abd-910b-78c42204f1f9'
        title: 'Book title'
        author: '51ad86d3-a782-4222-b96e-c1999cd7e2c9'
        isbn: '978-3-16-148410-0'
        releaseDate: '2023-10-15T22:00:21.845Z'
        pages: 576
        metadata:
          createdAt: "2023-10-15T22:00:21.845Z"
          createdBy: "admin"
          updatedAt: "2023-10-15T22:00:21.845Z"
          updatedBy: "admin"

    Metadata:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
      example:
        metadata:
          createdAt: "2023-10-15T22:00:21.845Z"
          createdBy: "admin"
          updatedAt: "2023-10-15T22:00:21.845Z"
          updatedBy: "admin"


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
